eval_cubed_LUT:
  .db (+_-$-1)/2
  .dw err_syntax      ;should not have run out of args!
  .dw cubed_ui8
  .dw cubed_ui16
  .dw cubed_ui32
  .dw cubed_fixed88
  .dw cubed_fixed1616
  .dw cubed_var
  .dw cubed_true
  .dw cubed_false
  .dw cubed_tstr_ref
  .dw cubed_raw
  .dw cubed_str
  .dw cubed_str_ref
  .dw cubed_single
  .dw cubed_xfloat
_:


cubed_true:
cubed_false:
;1*1*1 = 1, 0*0*0=0
;nice, just exit
  ret

cubed_ui8:
cubed_ui16:
cubed_ui32:
  call popoperand_ui32
  ld bc,mul32
  ld (next_page_call_address),bc
  push de
  pop bc
  push hl
  pop ix
  push de \ push hl
  call next_page_call
  pop ix \ pop bc
  ;z0_32 has the result
  ld hl,(z32_0)
  ld de,(z32_0+2)
  call next_page_call
  ld hl,(z32_0)
  ld de,(z32_0+2)
  ld a,d
  or e
  jp nz,pushoperand_ui32
  jp pushoperand_ui16_HL


cubed_fixed88:
  call popoperand_fixed88
  ld b,d
  ld c,e
  push de
  call mulfixed_88
  pop bc
  ex de,hl
  call mulfixed_88
  ex de,hl
  jp pushoperand_fixed88


cubed_fixed1616:
  call popoperand_fixed1616
  push de
  pop bc
  push hl
  pop ix
  push de \ push hl
  call mulfixed16_16_p0
  pop ix \ pop bc
  call mulfixed16_16_p0
  jp pushoperand_fixed1616

;
cubed_var:
cubed_tstr_ref:
cubed_raw:
cubed_str:
cubed_str_ref:
  jp err_syntax


cubed_single:
  call popoperand_single
  ld de,OP1
  call mov4_p0
  ld hl,OP1
  ld d,h
  ld e,l
  ld bc,(operandstack_ptr)
  call mulSingle_p0
  ld h,b
  ld l,c
  call mulSingle_p0
;WARNING: This routine assumes there is enough space on the operand stack!
  ld hl,4
  add hl,bc
  ld (hl),type_single
  inc hl
  ld (operandstack_ptr),hl
  ret

cubed_xfloat:
  call popoperand_xfloat
  ld de,OP1
  call mov10_p0
  ld hl,OP1
  ld d,h
  ld e,l
  ld bc,(operandstack_ptr)
  call xmul_p0
  ld h,b
  ld l,c
  call xmul_p0
;WARNING: This routine assumes there is enough space on the operand stack!
;Hypothetically, multiplying a ui32 and fixed1616 will need to pop off only 10
;bytes and push on 11. Or combos that include type_var can be a pain.
  ld hl,10
  add hl,bc
  ld (hl),type_xfloat
  inc hl
  ld (operandstack_ptr),hl
  ret
